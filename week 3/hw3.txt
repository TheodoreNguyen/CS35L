Theodore Nguyen
704-156-701

CS35L Fall 2014 Week 3 homework 3 questions


Q1. Why did Brady's patch remove the line "case_long_iso_time_style:"? Was it
necessary to remove that line? Explain.

The line "case_long_iso_time_style:" was a go-back point for the later-on
for-loop in the lines that said

		if (locale_format == long_time_format[i])
                     goto case_long_iso_time_style;

However, because we deleted that portion during the patch, the
"case_long_iso_time_style:" previously was irrelevant and redundant once the
patch was finished. 

It was, however, NOT necessary to remove that line. I patched the code via
replacing the code in the for loop and left the case_long_iso_time_style:
there, and ran "make" - the newly made ./ls -l still outputted the date in the
desired MONTH DAY YEAR format.






Q2. If your company adopts this patched version of Coreutils instead of the
default one, what else should you watch out for? Might this new version of
Coreutils introduce other problems with your application, perhaps in countries
where users don't speak English and don't understand English-format dates?

Essentially, the only problem with this patch is that it will show the date in
English, such that the months are in English. If the country is not an
English-speaking country, this is obviously problematic and not ideal. Also,
the shift from the format of "YEAR-MONTH-DAY" to "MONTH-DAY-YEAR" may be
troubling to some countries not used to that format (which is kind of
unlikely). Also, if the file is over a year old, it will show the year instead
of the time. 







Q3. What happens when this script is invoked on an empty file like /dev/null,
and why?

Running the scripts returns errors, specifically the following:

[classeen@lnxsrv04 ~/assign3]$ python randline.py /dev/null
Traceback (most recent call last):
  File "randline.py", line 70, in <module>
    main()
  File "randline.py", line 64, in main
    sys.stdout.write(generator.chooseline())
  File "randline.py", line 34, in chooseline
    return random.choice(self.lines)
  File "/usr/lib64/python2.6/random.py", line 261, in choice
    return seq[int(self.random() * len(seq))]  # raises IndexError if seq is
empty
IndexError: list index out of range

The commands expect lines to to be used as input. Specifically at the for
loop of the code, the script runs the loop zero to the number of lines in the
file - because there is zero lines, it is essentially running the loop -1
times.

That is one specific error. In essence, however, the script cannot produce a
random line from the file when there are no lines in the file in the first
place, so there is nothing to return.







Q4. What happens when this script is invoked with Python 3 rather than Python
2, and why? (You can run Python 3 on the SEASnet hosts by using the command
python3 instead of python.)

The console outputs:

sseen@lnxsrv04 ~/assign3]$ python3 randline.py testfile
  File "randline.py", line 65
    except IOError as (errno, strerror):
                      ^
SyntaxError: invalid syntax

when running the code with Python 3.


To fix this, we change the line of code that says 

 except IOError as (errno, strerror):

to

 except IOError as err:

This accomodates for the fact that in python2, exceptions are iterable and one
can iterate over parameters to the except via iterating over the exception.




